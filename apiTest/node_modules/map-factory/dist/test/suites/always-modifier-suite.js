"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _code = require("code");

var _labSuite = require("lab-suite");

var labSuite = _interopRequireWildcard(_labSuite);

var _mapFactory = require("../../lib/map-factory");

var _mapFactory2 = _interopRequireDefault(_mapFactory);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var suite = labSuite.create();

suite.expect("OPTIONS").to.be.an.anything();

suite.declare(function (lab, variables) {
  var OPTIONS = variables.OPTIONS;


  lab.test("overrides the default alwaysTransform behaviour with options " + JSON.stringify(OPTIONS), function () {

    var source = {
      "my": {
        "source": {
          "is": {}
        }
      }
    };

    var expected = {};

    var map = (0, _mapFactory2.default)(OPTIONS);

    map("my.source.is.missing").existing.to("your.source.is.missing", function () {
      return "failed";
    });

    var actual = map.execute(source);

    (0, _code.expect)(actual).to.equal(expected);
  });
});

exports.default = suite;