"use strict";

var _lab = require("lab");

var Lab = _interopRequireWildcard(_lab);

var _code = require("code");

var _lib = require("../lib");

var _lib2 = _interopRequireDefault(_lib);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var _exports$lab = exports.lab = Lab.script(),
    describe = _exports$lab.describe,
    it = _exports$lab.it,
    beforeEach = _exports$lab.beforeEach;

var source = {
  "foo": "bar",
  "bar": "foo"
};
var expected = {
  "bar": "bar"
};
var mapper = void 0;
var secondaryMapper = void 0;

describe("Chain functionality of the mapper", function () {

  beforeEach(function () {
    mapper = (0, _lib2.default)();
    secondaryMapper = (0, _lib2.default)();
  });

  describe("when chain is called from the mapper instance", function () {

    it("should return response with the desired result", function () {
      mapper.map("foo");
      secondaryMapper.map("foo").to("bar");
      (0, _code.expect)(mapper.chain(secondaryMapper).execute(source)).to.equal(expected);
    });
  });

  describe("when chain is called from the default function", function () {

    it("should return a response with the desired result", function () {
      secondaryMapper.map("foo").to("bar");
      var actual = mapper("foo").chain(secondaryMapper).execute(source);
      (0, _code.expect)(actual).to.equal(expected);
    });
  });

  describe("when chain is called without any params", function () {

    it("should throw an error", function () {
      (0, _code.expect)(function () {
        return mapper.map("foo").chain().execute(source);
      }).to.throw("mapper passed in chain can neither be null or undefined");
    });
  });
});